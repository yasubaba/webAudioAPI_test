import { SkyWayChannelImpl, SkyWayContext } from '@skyway-sdk/core';
import { SfuBotPlugin } from '@skyway-sdk/sfu-bot';
import { LocalSFURoomMember, LocalSFURoomMemberImpl } from '../member/local/sfu';
import { Room, RoomImpl, RoomMemberInit } from './base';
export interface SfuRoom extends Room {
    /**@description [japanese] SfuRoomにMemberを参加させる */
    join: (memberInit?: RoomMemberInit) => Promise<LocalSFURoomMember>;
}
/**@internal */
export declare class SfuRoomImpl extends RoomImpl implements SfuRoom {
    readonly _plugin: SfuBotPlugin;
    static Create(context: SkyWayContext, channel: SkyWayChannelImpl): Promise<SfuRoomImpl>;
    localRoomMember?: LocalSFURoomMemberImpl;
    private constructor();
    protected setChannelState(): void;
    protected setChannelListener(): void;
    private _handleOnMemberJoin;
    private _handleOnMemberLeft;
    private _handleOnStreamPublish;
    private _handleOnStreamUnpublish;
    private _getRelayedPublication;
    private _handleOnPublicationMetadataUpdate;
    private _handleOnPublicationEnabled;
    private _handleOnPublicationDisabled;
    private _handleOnStreamSubscribe;
    private _handleOnStreamUnsubscribe;
    join(memberInit?: RoomMemberInit): Promise<LocalSFURoomMemberImpl>;
}
//# sourceMappingURL=sfu.d.ts.map
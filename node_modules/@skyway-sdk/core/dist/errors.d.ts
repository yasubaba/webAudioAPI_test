export declare const errors: {
    readonly internal: {
        readonly name: "internal";
        readonly detail: "";
        readonly solution: "";
    };
    readonly timeout: {
        readonly name: "timeout";
        readonly detail: "";
        readonly solution: "";
    };
    readonly missingProperty: {
        readonly name: "missingProperty";
        readonly detail: "";
        readonly solution: "";
    };
    readonly notFound: {
        readonly name: "notFound";
        readonly detail: "";
        readonly solution: "";
    };
    readonly invalidParameter: {
        readonly name: "invalidParameter";
        readonly detail: "";
        readonly solution: "";
    };
    readonly invalidArgumentValue: {
        readonly name: "invalidArgumentValue";
        readonly detail: "引数の値が不正です";
        readonly solution: "正しい値を引数に渡してください";
    };
    readonly invalidContentType: {
        readonly name: "invalidContentType";
        readonly detail: "contentTypeが正しくありません";
        readonly solution: "ContentTypeを確認してください";
    };
    readonly localPersonNotJoinedChannel: {
        readonly name: "localPersonNotJoinedChannel";
        readonly detail: "操作しようとしたPersonがChannelに居ないので、操作できません The person who tried to operate is not in the channel, so the operation is not possible";
        readonly solution: "Channelに居ないPersonを操作している可能性があるので確認してください Please check as you may be operating a person which is not in the channel";
    };
    readonly alreadyLocalPersonExist: {
        readonly name: "alreadyLocalPersonExist";
        readonly detail: "ChannelにすでにLocalPersonが存在します。一つのChannelインスタンスにはLocalPersonが一つしかJoinできません";
        readonly solution: "複数のLocalPersonを用意したい場合は個別にChannelインスタンスを用意してください。";
    };
    readonly alreadySameNameMemberExist: {
        readonly name: "alreadySameNameMemberExist";
        readonly detail: "Channelにすでに同じNameのMemberが存在します";
        readonly solution: "別のNameを使用してください";
    };
    readonly alreadyPublishedStream: {
        readonly name: "alreadyPublishedStream";
        readonly detail: "すでにPublishしたStreamを再度Publishすることはできません You cannot re-publish a stream that has already been published";
        readonly solution: "そのStreamをPublishしたPublicationをUnpublishするか、別の新しいStreamを作ってPublishしてください Unpublish the publication that published that stream, or create another new stream and publish it";
    };
    readonly alreadySubscribedPublication: {
        readonly name: "alreadySubscribedPublication";
        readonly detail: "すでにSubscribeしたPublicationをSubscribeすることはできません";
        readonly solution: "ありません";
    };
    readonly invalidTrackKind: {
        readonly name: "invalidTrackKind";
        readonly detail: "Streamの種類とMediaStreamTrackの種類が一致しません";
        readonly solution: "Streamの種類と同じMediaStreamTrackを利用してください";
    };
    readonly cantMoveSameIdChannel: {
        readonly name: "cantMoveSameIdChannel";
        readonly detail: "moveChannelで同じidのChannelに移動することは出来ません";
        readonly solution: "移動先のChannelが正しいか確かめてください";
    };
    readonly alreadyChannelClosed: {
        readonly name: "alreadyChannelClosed";
        readonly detail: "ChannelがすでにCloseされています";
        readonly solution: "ありません";
    };
    readonly disabledDataStream: {
        readonly name: "disabledDataStream";
        readonly detail: "関連するPublicationがDisableなDataStreamには書き込みできません";
        readonly solution: "関連するPublicationをEnableしてから書き込んでください";
    };
    readonly publicationNotExist: {
        readonly name: "publicationNotExist";
        readonly detail: "channelに該当するPublicationが存在しません";
        readonly solution: "publicationIdが正しいか確かめてください";
    };
    readonly subscriptionNotExist: {
        readonly name: "subscriptionNotExist";
        readonly detail: "channelに該当するSubscriptionが存在しません";
        readonly solution: "subscriptionIdが正しいか確かめてください";
    };
    readonly unknownMemberType: {
        readonly name: "unknownMemberType";
        readonly detail: "対象のMemberのSubtypeのプラグインが登録されていません";
        readonly solution: "対象のMemberのSubtypeのプラグイン(SfuBotなど)をSkyWayContextに登録してください";
    };
    readonly streamNotExistInSubscription: {
        readonly name: "streamNotExistInSubscription";
        readonly detail: "SubscriptionにStreamがありません。RemoteMemberのSubscriptionのStreamにはアクセスできません";
        readonly solution: "参照しているSubscriptionが目的のものか確かめてください。";
    };
    readonly streamNotExistInPublication: {
        readonly name: "streamNotExistInPublication";
        readonly detail: "PublicationにStreamがありません。RemoteMemberのPublicationのStreamにはアクセスできません";
        readonly solution: "参照しているPublicationが目的のものか確かめてください。";
    };
    readonly dataStreamNotSupportEncoding: {
        readonly name: "dataStreamNotSupportEncoding";
        readonly detail: "dataStreamはEncode設定の変更に対応していません";
        readonly solution: "ありません";
    };
    readonly correspondingEncodeNotExistForId: {
        readonly name: "correspondingEncodeNotExistForId";
        readonly detail: "指定されたIDに対応するEncode設定が存在しません";
        readonly solution: "正しいEncodingIDを指定してください";
    };
    readonly updateIceParamsFailed: {
        readonly name: "updateIceParamsFailed";
        readonly detail: "iceParamsの更新に失敗しました";
        readonly solution: "ありません";
    };
    readonly invalidElement: {
        readonly name: "invalidElement";
        readonly detail: "渡されたHTML Elementが正しくありません";
        readonly solution: "要求された正しいElementを渡してください";
    };
    readonly connectRtcApiFailed: {
        readonly name: "connectRtcApiFailed";
        readonly detail: "RtcAPIへの接続に失敗しました";
        readonly solution: "インターネットへの接続できているか、もしくはTokenのパラメータが正しいかを確かめてください";
    };
    readonly rtcApiFatalError: {
        readonly name: "rtcApiFatalError";
        readonly detail: "RtcAPIの回復不能なエラーです。サーバー側の問題の可能性があります";
        readonly solution: "インターネットへの接続が出来ているかを確かめてください";
    };
    readonly invalidExpireTokenValue: {
        readonly name: "invalidExpireTokenValue";
        readonly detail: "tokenのExpire時刻が不正です";
        readonly solution: "正しい時刻を指定してください";
    };
    readonly invalidRemindExpireTokenValue: {
        readonly name: "invalidRemindExpireTokenValue";
        readonly detail: "tokenのExpireをリマインドする時間の値が不正です";
        readonly solution: "正しい時間を指定してください";
    };
    readonly invalidTokenAppId: {
        readonly name: "invalidTokenAppId";
        readonly detail: "tokenのappIdが正しくありません";
        readonly solution: "正しいappIdを含むTokenを使用してください";
    };
    readonly mediaDevicesNotFound: {
        readonly name: "mediaDevicesNotFound";
        readonly detail: "navigator.mediaDevicesがみつかりません";
        readonly solution: "アプリケーションをhttps,localhost,127.0.0.1のいずれかの環境で動作させてください";
    };
    readonly canNotUseReplaceStream: {
        readonly name: "canNotUseReplaceStream";
        readonly detail: "remoteのPublicationからreplaceStreamできません";
        readonly solution: "対象のPublicationがLocalのものか確認してください";
    };
    readonly canNotEnableRemotePublication: {
        readonly name: "canNotEnableRemotePublication";
        readonly detail: "remoteのPublicationをenableすることはできません";
        readonly solution: "対象のPublicationがLocalのものか確認してください";
    };
};
//# sourceMappingURL=errors.d.ts.map
import { VideoMediaTrackConstraints } from '../../factory';
import { LocalMediaStreamBase, LocalMediaStreamOptions } from './media';
export interface ProcessedStream {
    track: MediaStreamTrack;
    setEnabled(enabled: boolean): Promise<void>;
    dispose(): Promise<void>;
}
export declare class LocalCustomVideoStream extends LocalMediaStreamBase {
    readonly contentType = "video";
    private _isEnabled;
    private _promiseQueue;
    private _stream;
    constructor(options?: VideoMediaTrackConstraints & Partial<LocalMediaStreamOptions>);
    /**@internal */
    setStream(processedStream: ProcessedStream): Promise<void>;
    /**@internal */
    setEnabled(enabled: boolean): Promise<void>;
    /**@internal */
    updateTrack(track: MediaStreamTrack): Promise<void>;
    get isEnabled(): boolean;
    release(): void;
}
//# sourceMappingURL=customVideo.d.ts.map
import { Event } from '@skyway-sdk/common';
import { LocalStreamBase } from '.';
export declare type DataStreamMessageType = string | ArrayBuffer | object;
export declare class LocalDataStream extends LocalStreamBase {
    readonly options: DataStreamOptions;
    readonly contentType = "data";
    /**@private */
    readonly _onWriteData: Event<DataStreamMessageType>;
    private _isEnabled;
    constructor(options?: DataStreamOptions);
    get isEnabled(): boolean;
    /**@internal */
    setIsEnabled(b: boolean): void;
    /**@description [japanese] データを送信する */
    write(data: DataStreamMessageType): void;
}
/**@internal */
export declare const objectFlag = "skyway_object:";
export declare type DataStreamOptions = {
    /**
     * @description [japanese] 再送待ち時間上限
     */
    maxPacketLifeTime?: number;
    /**
     * @description [japanese] 再送回数上限
     */
    maxRetransmits?: number;
    /**
     * @description [japanese] 順序制御
     */
    ordered?: boolean;
};
//# sourceMappingURL=data.d.ts.map
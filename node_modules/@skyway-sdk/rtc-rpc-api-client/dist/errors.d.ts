import type { ResponseError } from './rpc';
export declare const errors: {
    readonly timeout: {
        readonly name: "timeout";
        readonly detail: "";
        readonly solution: "";
    };
    readonly internalError: {
        readonly name: "internalError";
        readonly detail: "";
        readonly solution: "";
    };
    readonly invalidParameter: {
        readonly name: "invalidParameter";
        readonly detail: "";
        readonly solution: "";
    };
    readonly connectionDisconnected: {
        readonly name: "connectionDisconnected";
        readonly detail: "";
        readonly solution: "";
    };
    readonly websocketConnectionFailure: {
        readonly name: "connectionFailure";
        readonly detail: "サーバへの接続に失敗しました";
        readonly solution: "ネットワーク接続状況を確認してください";
    };
    readonly rpcResponseError: {
        readonly name: "rpcResponseError";
        readonly detail: "";
        readonly solution: "";
        readonly error: ResponseError;
    };
    readonly onClosedWhileRequesting: {
        readonly name: "onClosedWhileRequesting";
        readonly detail: "request中にクライアントが終了されました";
        readonly solution: "リクエストの完了を確認してからクライアントを終了させてください";
    };
    readonly failedToConnectRtcAPI: {
        readonly name: "failedToConnectRtcAPI";
        readonly detail: "rtc-api serverへの接続に失敗しました";
        readonly solution: "インターネット接続状況とTokenの内容が正しいかを確かめてください";
    };
    readonly failedToUpdateMemberTTL: {
        readonly name: "failedToUpdateMemberTTL";
        readonly detail: "updateMemberTTLを再試行しましたが、失敗しました";
        readonly solution: "インターネット接続状況を確認してください";
    };
};
//# sourceMappingURL=errors.d.ts.map